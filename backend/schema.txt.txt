CREATE TABLE User (  

    UserID INTEGER,

    Username VARCHAR(64),  

    FullName VARCHAR(64) NOT NULL,

    Email VARCHAR(64) NOT NULL UNIQUE,  

    Password BINARY(64) NOT NULL, 
 
    UserAge INTEGER, 

    Bio VARCHAR(256), 

    ProfileImage VARCHAR(256) NOT NULL, # Points to Path: Cannot be NULL (Use Default Picture) 

    PRIMARY KEY(UserID) 

); 

  

CREATE TABLE Topic (  

    TopicName VARCHAR(64), 

    IsStock BOOLEAN NOT NULL,  

    PRIMARY KEY(TopicName) 

); 

  

CREATE TABLE Post (  

    PostId INTEGER AUTO_INCREMENT, 

    Username VARCHAR(64) NOT NULL, 

    TopicName VARCHAR(64), 

    PostType INTEGER NOT NULL, # 0 = Text     1 = URL     2 = Image 

    Post VARCHAR(200) NOT NULL, # Use PostType to determine if data is Text, URL, or Image Path 

    PostDate DATETIME NOT NULL, 

    Anonymous BOOLEAN NOT NULL, # Did User make Post Anonymously 

    PRIMARY KEY(PostId), 

    FOREIGN KEY(Username) REFERENCES User(Username) ON DELETE CASCADE, # Automatically deletes Comment when User (Poster) deletes their account 

    FOREIGN KEY(TopicName) REFERENCES Topic(TopicName) 

); 

  

CREATE TABLE Comment (  

    CommentId INTEGER AUTO_INCREMENT, # Need CommentId because a User can make many Comments on same Post 

    Username VARCHAR(64) NOT NULL, # Username of Commenter 

    PostId INTEGER NOT NULL, 

    Comment VARCHAR(100) NOT NULL, 

    CommentDate DATETIME NOT NULL, 

    PRIMARY KEY(CommentId), 

    FOREIGN KEY(Username) REFERENCES User(Username) ON DELETE CASCADE, # Automatically deletes Comment when User (Commenter) deletes their account 

    FOREIGN KEY(PostId) REFERENCES Post(PostId) ON DELETE CASCADE # Automatically deletes Comment when the Post is deleted 

); 

  

CREATE TABLE PostVotes (  

     Username VARCHAR(64), # Username of Post Voter 

     PostId INTEGER, # Post being voted on 

     Vote INTEGER NOT NULL, # -1 = Down     1 = Up     Delete Row if User undoes their vote 

     PRIMARY KEY(Username, PostId), 

     FOREIGN KEY(Username) REFERENCES User(Username) ON DELETE CASCADE, # Automatically deletes Post Vote when User (Voter) deletes their account 

     FOREIGN KEY(PostId) REFERENCES Post(PostId) ON DELETE CASCADE # Automatically deletes all Post Votes associated with the Post when the Post is deleted 

); 

  

# May not be necessary to implement for Project 

CREATE TABLE CommentVotes ( 

     Username VARCHAR(64), # Username of Comment Voter 

     CommentId INTEGER, # Comment being voted on 

     Vote INTEGER NOT NULL, # -1 = Down     1 = Up     Delete Row if User undoes their vote 

     PRIMARY KEY(Username, CommentId), 

     FOREIGN KEY(Username) REFERENCES User(Username) ON DELETE CASCADE, # Automatically deletes Comment Vote when User (Voter) deletes their account 

     FOREIGN KEY(CommentId) REFERENCES Comment(CommentId) ON DELETE CASCADE # Automatically deletes all Comment Votes associated with the Comment when the Comment is deleted 

); 

  

CREATE TABLE UserFollowsTopic ( 

     Username VARCHAR(64), # Username of Person Following Topic 

     TopicName VARCHAR(64), # Topic they are following 

     PRIMARY KEY(Username, TopicName), 

     FOREIGN KEY(Username) REFERENCES User(Username) ON DELETE CASCADE # Automatically deletes the fact that User is following Topic when User deletes their account 

); 

  

CREATE TABLE UserFollowsUser ( 

     DoingFollowing VARCHAR(64), # Username of Person doing the Following 

     BeingFollowed VARCHAR(64), # Username of the Person being Followed 

     PRIMARY KEY(DoingFollowing, BeingFollowed), 

     FOREIGN KEY(DoingFollowing) REFERENCES User(Username) ON DELETE CASCADE, 

     FOREIGN KEY(BeingFollowed) REFERENCES User(Username) ON DELETE CASCADE 

     # Cascades automatically remove row(s) when either User is deleted 

); 

  

CREATE TABLE UserSavesPost ( 

     Username VARCHAR(64), # Username of Post Voter 

     PostId INTEGER, 

     PRIMARY KEY(Username, PostId), 

     FOREIGN KEY(Username) REFERENCES User(Username) ON DELETE CASCADE, 

     FOREIGN KEY(PostId) REFERENCES Post(PostId) ON DELETE CASCADE 

); 